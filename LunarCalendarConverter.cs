using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LunarCalendar
{
    public class LunarCalendarConverter
    {
        private static readonly Dictionary<(int, int), string> LunarFestivals;
        private static readonly string[] TermNames;
        private static readonly string[] MonthNames;
        private static readonly string[] DayPerfixNames;
        private static readonly string[] NumberNames;
        private static readonly int[][] Terms;
        private static readonly Dictionary<int, Dictionary<int, int>> YearDateTerms;
        private static readonly Calendar calendar;

        static LunarCalendarConverter()
        {
            calendar = new ChineseLunisolarCalendar();

            LunarFestivals = new Dictionary<(int, int), string>()
            {
                {(12,8),"腊八节"},
                {(12,23),"小年"},
                {(12,30),"除夕"},
                {(1,1),"春节"},
                {(1,15),"元宵节"},
                {(2,29),"寒食节"},
                {(5,5),"端午节"},
                {(7,15),"中元节"},
                {(8,15),"中秋节"},
                {(9,9),"重阳节"},
            };

            MonthNames = new string[]
            {
                "",
                "正月",
                "二月",
                "三月",
                "四月",
                "五月",
                "六月",
                "七月",
                "八月",
                "九月",
                "十月",
                "十一月",
                "腊月",
            };

            DayPerfixNames = new string[]
            {
                "初",
                "十",
                "廿",
                "卅"
            };

            NumberNames = new[]
            {
                "",
                "一",
                "二",
                "三",
                "四",
                "五",
                "六",
                "七",
                "八",
                "九",
                "十",
            };

            YearDateTerms = new Dictionary<int, Dictionary<int, int>>();

            #region Init Lunar Terms

            TermNames = new[] { "小寒", "大寒", "立春", "雨水", "惊蛰", "春分", "清明", "谷雨", "立夏", "小满", "芒种", "夏至", "小暑", "大暑", "立秋", "处暑", "白露", "秋分", "寒露", "霜降", "立冬", "小雪", "大雪", "冬至" };

            Terms = new int[][]
            {
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x98082, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0xb06bd, 0xb0722, 0xc965c, 0xe1cfc, 0xc920f},
                new int[] {0xb0270, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0xb06bd, 0xb0722, 0xc965c, 0xe1cfc, 0xc920f},
                new int[] {0xb0270, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0xb06bd, 0xb0722, 0xc965c, 0xe1cfc, 0xc920f},
                new int[] {0xb0270, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97783, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x9801d, 0x98082, 0xc95f8, 0xe1cfc, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd1, 0x97c36, 0xc9210, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc95f8, 0xc965c, 0xc920e},
                new int[] {0x97bd0, 0x9801d, 0x98082, 0xc95f8, 0xe1cfc, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xc9210, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc95f8, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x98082, 0xc95f8, 0xe1cfc, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xc9210, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x98082, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x98082, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x97c35, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x97bd0, 0x7f595, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd1, 0x9801e, 0xc9210, 0xc9274, 0xc920e},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x7f530, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xc9210, 0xc9274, 0xc920e},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc95f8, 0xc965c, 0xc920f},
                new int[] {0x97bd0, 0x7f530, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xc9210, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bd0, 0x7f148, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc965c, 0xc920e},
                new int[] {0x97bcf, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x9801e, 0xc9210, 0xc9274, 0xc920e},
                new int[] {0x97bcf, 0x7f0e4, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc91aa},
                new int[] {0x97b6b, 0x97bd1, 0x97c36, 0xc9210, 0xc9274, 0xc920e},
                new int[] {0x97bcf, 0x7f0e4, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xc9210, 0xc9274, 0xc920e},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f530, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b70, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e3, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9274, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f531, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc91aa},
                new int[] {0x97b6b, 0x7f0e4, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x97bd0, 0x97c36, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f530, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e3, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc9210, 0xc8dc2},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x97c35, 0xb0b6f, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f149, 0x98082, 0xb0723, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e3, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x97bd0, 0x7f595, 0xb0b0b, 0xc920f, 0xb0722},
                new int[] {0x97783, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f148, 0x7f595, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e3, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x7f148, 0x98082, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x7f148, 0x98082, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x66aa8, 0x9801e, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x66aa8, 0x9801e, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0723, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f149, 0xb0723, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x66aa8, 0x9801e, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0723, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e3, 0x7f149, 0x98083, 0xb0787, 0xb0721},
                new int[] {0x7f0e2, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x7f0e3, 0x66aa8, 0x9801e, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7f07e, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x6665b, 0x66aa8, 0x9801e, 0x98082, 0x97c35},
                new int[] {0x665f6, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb0721},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0722},
                new int[] {0x7f0e3, 0x6665b, 0x66a44, 0x9801e, 0x98082, 0x97c35},
                new int[] {0x665f6, 0x7f0e3, 0x7f148, 0x98082, 0xb0723, 0xb02d5},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e3, 0x6665b, 0x66a44, 0x9801e, 0x98082, 0x97c35},
                new int[] {0x665f6, 0x7f0e3, 0x7f148, 0x98082, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x6665b, 0x66a44, 0x9801e, 0x98082, 0x97c35},
                new int[] {0x665f6, 0x7f0e3, 0x7f148, 0x9801e, 0xb0722, 0x97c35},
                new int[] {0x7ec96, 0x7f0e3, 0x7f149, 0x98082, 0xb0787, 0xb06bd},
                new int[] {0x7f07e, 0x7f0e4, 0x7f531, 0xb0723, 0xb0b6f, 0xb0721},
                new int[] {0x7f0e2, 0x7f148, 0x7f531, 0xb0b0b, 0xb0b6f, 0xb0722}
            };

            #endregion Init Lunar Terms

        }

        private static Dictionary<int, int> GetYearTerms(int year)
        {
            if (year < 1900 || year > 2100) return new Dictionary<int, int>();

            if (YearDateTerms.TryGetValue(year, out var value))
            {
                return value;
            }
            var yearIndex = year - 1900;
            if (yearIndex < 0 || yearIndex >= Terms.Length) return new Dictionary<int, int>();
            var termData = Terms[yearIndex];

            value = new Dictionary<int, int>();

            for (int i = 0; i < termData.Length; i++)
            {
                value[DayOfYear(year, i * 2 + 1, termData[i] / 100000)] = i * 4;
                value[DayOfYear(year, i * 2 + 1, termData[i] % 100000 / 1000)] = i * 4 + 1;
                value[DayOfYear(year, i * 2 + 2, termData[i] % 1000 / 100)] = i * 4 + 2;
                value[DayOfYear(year, i * 2 + 2, termData[i] % 100)] = i * 4 + 3;
            }

            YearDateTerms[year] = value;
            return value;
        }

        private static int DayOfYear(int year, int month, int day)
        {
            return new DateTimeOffset(year, month, day, 0, 0, 0, TimeSpan.FromHours(8)).DayOfYear;
        }

        public static string GetTerm(int year, int month, int day)
        {
            if (year < 1900 || year > 2100) return null;
            if (GetYearTerms(year).TryGetValue(DayOfYear(year, month, day), out var termIndex))
            {
                return TermNames[termIndex];
            }
            return null;
        }

        public static string GetLunarDateString(int month, int day, int leapMonth)
        {
            if (day == 1)
            {
                if (leapMonth == 0) { return MonthNames[month]; }
                else
                {
                    if (leapMonth == month) return "闰" + MonthNames[leapMonth - 1];
                    else if (leapMonth < month) return MonthNames[month - 1];
                    return MonthNames[month];
                }
            }

            var prefix = day / 10;
            var suffix = day % 10;
            if (suffix == 0)
            {
                if (prefix == 1) return "初十";
                if (prefix == 2) return "二十";
                if (prefix == 3) return "三十";
            }

            return DayPerfixNames[prefix] + NumberNames[suffix];
        }

        /// <summary>
        /// 返回农历节日、节气或日期
        /// </summary>
        /// <param name="date"></param>
        /// <returns></returns>
        public static string GetDayOrTermString(DateTimeOffset date)
        {
            var year = calendar.GetYear(date.LocalDateTime);
            var month = calendar.GetMonth(date.LocalDateTime);
            var day = calendar.GetDayOfMonth(date.LocalDateTime);
            if (LunarFestivals.TryGetValue((month, day), out var festival))
            {
                return festival;
            }

            var term = GetTerm(date.Year, date.Month, date.Day);
            if (!string.IsNullOrEmpty(term))
                return term;

            var leapMonth = calendar.GetLeapMonth(year);

            return GetLunarDateString(month, day, leapMonth);
        }


    }
}
